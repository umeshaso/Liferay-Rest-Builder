info:
  description: "An example about how to create an API usign the Rest Builder Tool"
  license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "Employee RestBuilder API"
  version: v1.0
openapi: 3.0.1
components:
  schemas:
    Employee:
      description: "This is an Employee"
      properties:
        empId:
          description: "The Employee Id"
          type: integer
        empName:
          description: "The Employee Name"
          type: string
        empAddress:
          description: "The Employee Address"
          items:
           oneOf:
            - $ref: '#/components/schemas/Address'
    Address:
      description: "This is an Address"
      properties:
        billingAddress:
          description: "Billing Address"
          type: string
        shippingAddress:
          description: "Shipping Address"
          type: string
paths:
  "/employee":   
    put:
      description: "Creates a new Employee"
      operationId: updateEmployee
      requestBody:
        content:
          application/json:
            schema:
               $ref: "#/components/schemas/Employee"
          application/xml:
            schema:
               $ref: "#/components/schemas/Employee"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                 $ref: "#/components/schemas/Employee"
      tags: ["Employee"]
    post:
      description: "Creates a new Employee"
      operationId: postEmployee
      requestBody:
        content:
          application/json:
            schema:
               $ref: "#/components/schemas/Employee"
          application/xml:
            schema:
               $ref: "#/components/schemas/Employee"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                 $ref: "#/components/schemas/Employee"
      tags: ["Employee"]
  "/employees":
    get:
      description: "Gets a list of Employee"
      operationId: getEmployeePage
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Employee"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Employee"
                type: array
      tags: ["Employee"]
  "/employee/{objectId}":
    get:
      operationId: getEmployee
      tags: ["Employees"]
      description: "Get an Employee by id"
      parameters:
        - in: path
          name: objectId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                 $ref: "#/components/schemas/Employee"
    delete:
      operationId: deleteEmployee
      tags: ["Employee"]
      description: "Delete an Employee by id"
      parameters:
        - in: path
          name: objectId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                 $ref: "#/components/schemas/Employee"
